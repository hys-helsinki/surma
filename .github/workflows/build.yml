# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Buildin toimivuuden tarkistus

on:
  push:
    branches: ["main"]
  pull_request:
    branches: "**"

jobs:
  container-job:
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:22-alpine3.22
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: initialize database
        run: npx prisma generate && npx prisma db push
        env:
          POSTGRES_URL: postgres://postgres:postgres@postgres:5432
          PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING: 1
      - run: npm run build --if-present
        env:
          POSTGRES_URL: postgres://postgres:postgres@postgres:5432
#    - run: npm test
